"use strict";(self.webpackChunkmui_treasury=self.webpackChunkmui_treasury||[]).push([[587],{"./blocks/field-combo-basic/usage.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>usage});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const FieldComboBasicraw_namespaceObject='import React, { PropsWithChildren, ReactElement, useContext } from "react";\nimport useAutocomplete, {\n  AutocompleteGroupedOption,\n  UseAutocompleteProps,\n} from "@mui/material/useAutocomplete";\nimport {\n  ComboAnchor,\n  ComboFormControl,\n  ComboGroup,\n  ComboInput,\n  ComboLabel,\n  ComboList,\n  ComboOption,\n} from "./ComboBoxCompounds";\nimport { AnchorContext, ComboBoxContext } from "./ComboBoxContext";\n\nexport function ComboBox<\n  T,\n  DisableClearable extends boolean | undefined = false,\n  FreeSolo extends boolean | undefined = false\n>({\n  children,\n  renderOptions,\n  renderGroupedOptions,\n  ...props\n}: PropsWithChildren<\n  Omit<\n    UseAutocompleteProps<T, false, DisableClearable, FreeSolo>,\n    "groupBy" | "multiple"\n  > &\n    (\n      | {\n          groupBy: (option: T) => string;\n          renderGroupedOptions: (\n            groupedOptions: {\n              key: number;\n              index: number;\n              group: string;\n              options: T[];\n            }[]\n          ) => ReactElement | null;\n          renderOptions?: never;\n        }\n      | {\n          groupBy?: never;\n          renderGroupedOptions?: never;\n          renderOptions: (options: T[]) => ReactElement | null;\n        }\n    )\n>) {\n  if (!props.getOptionLabel) {\n    throw new Error(\'"getOptionLabel" is required\');\n  }\n  const {\n    getRootProps,\n    getInputProps,\n    getInputLabelProps,\n    getListboxProps,\n    getOptionProps,\n    groupedOptions,\n    anchorEl,\n    setAnchorEl,\n    popupOpen,\n  } = useAutocomplete({\n    openOnFocus: true,\n    ...props,\n    // @ts-ignore\n    multiple: false,\n    componentName: "ComboBox",\n  });\n\n  const comboAnchor = useContext(AnchorContext);\n  return (\n    <ComboBoxContext.Provider\n      value={{\n        anchorEl: comboAnchor ?? anchorEl,\n        setAnchorEl,\n        popupOpen,\n        getRootProps,\n        getInputProps,\n        getInputLabelProps,\n        getListboxProps,\n        getOptionProps,\n      }}\n    >\n      {children}\n      {"groupBy" in props\n        ? renderGroupedOptions?.(\n            groupedOptions as AutocompleteGroupedOption<T>[]\n          )\n        : renderOptions?.(groupedOptions as T[])}\n    </ComboBoxContext.Provider>\n  );\n}\n\nComboBox.Anchor = ComboAnchor;\nComboBox.FormControl = ComboFormControl;\nComboBox.Label = ComboLabel;\nComboBox.Input = ComboInput;\nComboBox.List = ComboList;\nComboBox.Group = ComboGroup;\nComboBox.Option = ComboOption;\n';function _createMdxContent(props){const _components=Object.assign({h2:"h2",pre:"pre",code:"code"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Field/Combo/Basic"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"cli",children:"CLI"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-sh",children:"npx mui-treasury@latest clone field-combo-basic\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"fieldcombobasic",children:"FieldComboBasic"}),"\n",(0,jsx_runtime.jsx)(dist.Hw,{code:FieldComboBasicraw_namespaceObject,language:"tsx"})]})}const usage=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)}},"./.storybook/decorators/storyDialog.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>storyDialog});var _mdx_js_react__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_material_Dialog__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@mui/material/Dialog/Dialog.js"),_mui_material_DialogContent__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/@mui/material/DialogContent/DialogContent.js"),_mui_material_DialogTitle__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/@mui/material/DialogTitle/DialogTitle.js"),_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@mui/material/IconButton/IconButton.js"),_mui_material_SvgIcon__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@mui/material/SvgIcon/SvgIcon.js"),_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mui/material/Tooltip/Tooltip.js"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),_storybook_theming__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/theming/dist/chunk-6P7RB4HF.mjs"),_storybook_theming__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./node_modules/@storybook/theming/dist/index.mjs"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const defaultTheme={..._storybook_theming__WEBPACK_IMPORTED_MODULE_2__.np.light,color:_storybook_theming__WEBPACK_IMPORTED_MODULE_2__.$_,background:_storybook_theming__WEBPACK_IMPORTED_MODULE_2__.Oq,typography:_storybook_theming__WEBPACK_IMPORTED_MODULE_2__.cp},defaultComponents={code:_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.bD,a:_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.Ct,..._storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.lO};function storyDialog(Component){return function storyDialogDecorator(Story,context){const[open,setOpen]=react__WEBPACK_IMPORTED_MODULE_0__.useState(!1);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Story,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_4__.Z,{title:"Show source code",placement:"top-start",sx:{zIndex:1e5},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_5__.Z,{sx:{position:"fixed",bottom:"1rem",left:"0.5rem",zIndex:99999,borderRadius:40},onClick:()=>setOpen(!0),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_SvgIcon__WEBPACK_IMPORTED_MODULE_6__.Z,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24",strokeWidth:1.5,stroke:"currentColor",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("path",{strokeLinecap:"round",strokeLinejoin:"round",d:"M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m5.231 13.481L15 17.25m-4.5-15H5.625c-.621 0-1.125.504-1.125 1.125v16.5c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9zm3.75 11.625a2.625 2.625 0 11-5.25 0 2.625 2.625 0 015.25 0z"})})})})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_Dialog__WEBPACK_IMPORTED_MODULE_7__.Z,{open,onClose:()=>setOpen(!1),children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_DialogTitle__WEBPACK_IMPORTED_MODULE_8__.Z,{children:"Usage"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_DialogContent__WEBPACK_IMPORTED_MODULE_9__.Z,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_theming__WEBPACK_IMPORTED_MODULE_10__.f6,{theme:defaultTheme,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mdx_js_react__WEBPACK_IMPORTED_MODULE_11__.Zo,{components:defaultComponents,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Component,{})})})})]})]})}}},"./blocks/field-combo-basic/FieldComboBasic.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Group:()=>Group,Multiple:()=>Multiple,Single:()=>Single,__namedExportsOrder:()=>__namedExportsOrder,default:()=>FieldComboBasic_stories});var react=__webpack_require__("./node_modules/react/index.js"),storyDialog=__webpack_require__("./.storybook/decorators/storyDialog.tsx"),useAutocomplete=__webpack_require__("./node_modules/@mui/base/useAutocomplete/useAutocomplete.js"),Box=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),FormControl=__webpack_require__("./node_modules/@mui/material/FormControl/FormControl.js"),FormLabel=__webpack_require__("./node_modules/@mui/material/FormLabel/FormLabel.js"),InputBase=__webpack_require__("./node_modules/@mui/material/InputBase/InputBase.js"),ListSubheader=__webpack_require__("./node_modules/@mui/material/ListSubheader/ListSubheader.js"),Popper=__webpack_require__("./node_modules/@mui/material/Popper/Popper.js");const AnchorContext=react.createContext(null),ComboBoxContext=react.createContext(void 0),useComboBoxCtx=()=>{const ctx=(0,react.useContext)(ComboBoxContext);if(!ctx)throw new Error('"useComboBoxCtx" needs to be called inside <ComboBox> component');return ctx};var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const ComboFormControl=props=>{const{getRootProps,setAnchorEl}=useComboBoxCtx();return(0,jsx_runtime.jsx)(FormControl.Z,{...props,ref:setAnchorEl,...getRootProps(),sx:{padding:"0 1rem",position:"relative",display:"flex","& + &":{marginTop:3,"&:after":{content:'""',display:"block",height:24,border:"1px dashed",borderColor:"grey.500",position:"absolute",left:"calc(1rem + 3px)",top:0,transform:"translateY(-100%)"},"& [data-dot]":{borderRadius:0}}}})};ComboFormControl.displayName="ComboFormControl";const ComboLabel=props=>{const{getInputLabelProps}=useComboBoxCtx();return(0,jsx_runtime.jsx)(FormLabel.Z,{...props,...getInputLabelProps()})};ComboLabel.displayName="ComboLabel";const ComboAnchor=({children,...props})=>{const[anchorEl,setAnchorEl]=(0,react.useState)(null);return(0,jsx_runtime.jsx)(Box.Z,{...props,ref:setAnchorEl,sx:{position:"relative",border:"1px solid",borderColor:"grey.500",borderRadius:"0.25rem",backgroundColor:"#fff",paddingBottom:"0.625rem"},children:(0,jsx_runtime.jsx)(AnchorContext.Provider,{value:anchorEl,children})})};ComboAnchor.displayName="ComboAnchor";const ComboInput=(0,react.forwardRef)(((props,ref)=>{const{getInputProps}=useComboBoxCtx(),inputProps=getInputProps();return(0,jsx_runtime.jsx)(InputBase.ZP,{ref,startAdornment:(0,jsx_runtime.jsx)(Box.Z,{"data-dot":!0,sx:{width:8,height:8,borderRadius:"50%",backgroundColor:"text.primary",marginRight:"0.75rem",flexShrink:0}}),...props,inputProps,sx:{display:"flex"}})})),ComboGroup=({children,label,ListSubheaderProps,...props})=>(0,jsx_runtime.jsxs)("li",{...props,children:[(0,jsx_runtime.jsx)(ListSubheader.Z,{component:"div",...ListSubheaderProps,sx:{fontSize:"0.75rem",fontWeight:"bold",textTransform:"uppercase",color:"grey.500",lineHeight:"2.5rem",backgroundColor:"background.paper",letterSpacing:"0.5px"},children:label}),(0,jsx_runtime.jsx)(Box.Z,{sx:{padding:0},children})]});ComboGroup.displayName="ComboGroup";const ComboOption=({children,index,option})=>{const{getOptionProps}=useComboBoxCtx(),optionProps=getOptionProps({option,index});return(0,jsx_runtime.jsx)(Box.Z,{component:"li",sx:theme=>({display:"flex",justifyContent:"flex-start",alignItems:"center",cursor:"pointer",paddingBlock:"0.375rem",paddingInline:"1rem",boxSizing:"border-box",outline:"none",WebkitTapHighlightColor:"transparent","& svg":{marginLeft:"-0.25rem",marginRight:"0.5rem"},'&[aria-selected="true"]':{backgroundColor:theme.vars?`rgba(${theme.vars.palette.primary.mainChannel} / 0.1)`:theme.palette.action.hover,fontWeight:500,color:(theme.vars||theme).palette.primary.main,"& *":{color:theme.vars?`rgba(${theme.vars.palette.primary.mainChannel} / 0.6)`:theme.palette.action.active}},'&.Mui-focusVisible:not([aria-selected="true"])':{backgroundColor:theme.palette.action.hover},"&:active":{fontWeight:500},'&[aria-disabled="true"]':{opacity:theme.palette.action.disabledOpacity,pointerEvents:"none"}}),...optionProps,children})};function ComboBox({children,renderOptions,renderGroupedOptions,...props}){if(!props.getOptionLabel)throw new Error('"getOptionLabel" is required');const{getRootProps,getInputProps,getInputLabelProps,getListboxProps,getOptionProps,groupedOptions,anchorEl,setAnchorEl,popupOpen}=(0,useAutocomplete.o)({openOnFocus:!0,...props,multiple:!1,componentName:"ComboBox"}),comboAnchor=(0,react.useContext)(AnchorContext);return(0,jsx_runtime.jsxs)(ComboBoxContext.Provider,{value:{anchorEl:comboAnchor??anchorEl,setAnchorEl,popupOpen,getRootProps,getInputProps,getInputLabelProps,getListboxProps,getOptionProps},children:[children,"groupBy"in props?renderGroupedOptions?.(groupedOptions):renderOptions?.(groupedOptions)]})}ComboOption.displayName="ComboOption",ComboBox.displayName="ComboBox",ComboBox.Anchor=ComboAnchor,ComboBox.FormControl=ComboFormControl,ComboBox.Label=ComboLabel,ComboBox.Input=ComboInput,ComboBox.List=({children})=>{const{popupOpen,anchorEl,getListboxProps}=useComboBoxCtx();return popupOpen&&anchorEl?(0,jsx_runtime.jsx)(Popper.Z,{open:!0,anchorEl,role:"presentation",style:{width:anchorEl?.clientWidth},sx:{zIndex:1200},children:(0,jsx_runtime.jsx)(Box.Z,{component:"ul",sx:{margin:"4px 0",padding:0,zIndex:1,top:8,left:0,right:0,listStyle:"none",backgroundColor:"background.paper",overflow:"auto",maxHeight:"40vh",border:"1px solid",borderColor:"divider",borderRadius:"0.25rem"},...getListboxProps(),children})}):null},ComboBox.Group=ComboGroup,ComboBox.Option=ComboOption;var usage=__webpack_require__("./blocks/field-combo-basic/usage.mdx");const FieldComboBasic_stories={title:"Field/Combo/Basic",component:ComboBox,parameters:{layout:"centered",githubUsername:"siriwatknp"},decorators:[(0,storyDialog.Z)(usage.default)]},Single={render:()=>(0,jsx_runtime.jsx)("div",{style:{width:340,padding:20,maxWidth:"100%",resize:"horizontal",overflow:"auto"},children:(0,jsx_runtime.jsx)(ComboBox,{id:"film-autocomplete",options:top100Films,getOptionLabel:option=>option.label,renderOptions:options=>(0,jsx_runtime.jsx)(ComboBox.List,{children:options.map(((option,index)=>(0,jsx_runtime.jsx)(ComboBox.Option,{option,index,children:option.label},option.label)))}),children:(0,jsx_runtime.jsx)(ComboBox.FormControl,{children:(0,jsx_runtime.jsx)(ComboBox.Input,{placeholder:"Type film information"})})})})},Multiple={render:()=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(ComboBox,{id:"film-autocomplete1",options:top100Films,getOptionLabel:option=>option.label,renderOptions:options=>(0,jsx_runtime.jsx)(ComboBox.List,{children:options.map(((option,index)=>(0,jsx_runtime.jsx)(ComboBox.Option,{option,index,children:option.label},option.label)))}),children:(0,jsx_runtime.jsx)(ComboBox.FormControl,{margin:"normal",children:(0,jsx_runtime.jsx)(ComboBox.Input,{placeholder:"Type film information"})})}),(0,jsx_runtime.jsx)(ComboBox,{id:"film-autocomplete2",options:top100Films,getOptionLabel:option=>option.label,renderOptions:options=>(0,jsx_runtime.jsx)(ComboBox.List,{children:options.map(((option,index)=>(0,jsx_runtime.jsx)(ComboBox.Option,{option,index,children:option.label},option.label)))}),children:(0,jsx_runtime.jsx)(ComboBox.FormControl,{required:!0,color:"secondary",margin:"normal",children:(0,jsx_runtime.jsx)(ComboBox.Input,{placeholder:"Type film information"})})}),(0,jsx_runtime.jsx)(ComboBox,{id:"film-autocomplete3",options:top100Films,getOptionLabel:option=>option.label,renderOptions:options=>(0,jsx_runtime.jsx)(ComboBox.List,{children:options.map(((option,index)=>(0,jsx_runtime.jsx)(ComboBox.Option,{option,index,children:option.label},option.label)))}),children:(0,jsx_runtime.jsx)(ComboBox.FormControl,{required:!0,error:!0,margin:"normal",children:(0,jsx_runtime.jsx)(ComboBox.Input,{placeholder:"Type film information"})})})]})},Group={render:()=>(0,jsx_runtime.jsx)(ComboBox.Anchor,{children:Multiple.render?.()})},top100Films=[{label:"The Shawshank Redemption",year:1994},{label:"The Godfather",year:1972},{label:"The Godfather: Part II",year:1974},{label:"The Dark Knight",year:2008},{label:"12 Angry Men",year:1957},{label:"Schindler's List",year:1993},{label:"Pulp Fiction",year:1994},{label:"The Lord of the Rings: The Return of the King",year:2003},{label:"The Good, the Bad and the Ugly",year:1966},{label:"Fight Club",year:1999},{label:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{label:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{label:"Forrest Gump",year:1994},{label:"Inception",year:2010},{label:"The Lord of the Rings: The Two Towers",year:2002},{label:"One Flew Over the Cuckoo's Nest",year:1975},{label:"Goodfellas",year:1990},{label:"The Matrix",year:1999},{label:"Seven Samurai",year:1954},{label:"Star Wars: Episode IV - A New Hope",year:1977},{label:"City of God",year:2002},{label:"Se7en",year:1995},{label:"The Silence of the Lambs",year:1991},{label:"It's a Wonderful Life",year:1946},{label:"Life Is Beautiful",year:1997},{label:"The Usual Suspects",year:1995},{label:"Léon: The Professional",year:1994},{label:"Spirited Away",year:2001},{label:"Saving Private Ryan",year:1998},{label:"Once Upon a Time in the West",year:1968},{label:"American History X",year:1998},{label:"Interstellar",year:2014},{label:"Casablanca",year:1942},{label:"City Lights",year:1931},{label:"Psycho",year:1960},{label:"The Green Mile",year:1999},{label:"The Intouchables",year:2011},{label:"Modern Times",year:1936},{label:"Raiders of the Lost Ark",year:1981},{label:"Rear Window",year:1954},{label:"The Pianist",year:2002},{label:"The Departed",year:2006},{label:"Terminator 2: Judgment Day",year:1991},{label:"Back to the Future",year:1985},{label:"Whiplash",year:2014},{label:"Gladiator",year:2e3},{label:"Memento",year:2e3},{label:"The Prestige",year:2006},{label:"The Lion King",year:1994},{label:"Apocalypse Now",year:1979},{label:"Alien",year:1979},{label:"Sunset Boulevard",year:1950},{label:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{label:"The Great Dictator",year:1940},{label:"Cinema Paradiso",year:1988},{label:"The Lives of Others",year:2006},{label:"Grave of the Fireflies",year:1988},{label:"Paths of Glory",year:1957},{label:"Django Unchained",year:2012},{label:"The Shining",year:1980},{label:"WALL·E",year:2008},{label:"American Beauty",year:1999},{label:"The Dark Knight Rises",year:2012},{label:"Princess Mononoke",year:1997},{label:"Aliens",year:1986},{label:"Oldboy",year:2003},{label:"Once Upon a Time in America",year:1984},{label:"Witness for the Prosecution",year:1957},{label:"Das Boot",year:1981},{label:"Citizen Kane",year:1941},{label:"North by Northwest",year:1959},{label:"Vertigo",year:1958},{label:"Star Wars: Episode VI - Return of the Jedi",year:1983},{label:"Reservoir Dogs",year:1992},{label:"Braveheart",year:1995},{label:"M",year:1931},{label:"Requiem for a Dream",year:2e3},{label:"Amélie",year:2001},{label:"A Clockwork Orange",year:1971},{label:"Like Stars on Earth",year:2007},{label:"Taxi Driver",year:1976},{label:"Lawrence of Arabia",year:1962},{label:"Double Indemnity",year:1944},{label:"Eternal Sunshine of the Spotless Mind",year:2004},{label:"Amadeus",year:1984},{label:"To Kill a Mockingbird",year:1962},{label:"Toy Story 3",year:2010},{label:"Logan",year:2017},{label:"Full Metal Jacket",year:1987},{label:"Dangal",year:2016},{label:"The Sting",year:1973},{label:"2001: A Space Odyssey",year:1968},{label:"Singin' in the Rain",year:1952},{label:"Toy Story",year:1995},{label:"Bicycle Thieves",year:1948},{label:"The Kid",year:1921},{label:"Inglourious Basterds",year:2009},{label:"Snatch",year:2e3},{label:"3 Idiots",year:2009},{label:"Monty Python and the Holy Grail",year:1975}];Single.parameters={...Single.parameters,docs:{...Single.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    width: 340,\n    padding: 20,\n    maxWidth: "100%",\n    resize: "horizontal",\n    overflow: "auto"\n  }}>\n      <ComboBox id={"film-autocomplete"} options={top100Films} getOptionLabel={option => option.label} renderOptions={options => <ComboBox.List>\n            {options.map((option, index) => <ComboBox.Option key={option.label} option={option} index={index}>\n                {option.label}\n              </ComboBox.Option>)}\n          </ComboBox.List>}>\n        <ComboBox.FormControl>\n          <ComboBox.Input placeholder={"Type film information"} />\n        </ComboBox.FormControl>\n      </ComboBox>\n    </div>\n}',...Single.parameters?.docs?.source}}},Multiple.parameters={...Multiple.parameters,docs:{...Multiple.parameters?.docs,source:{originalSource:'{\n  render: () => <>\n      <ComboBox id={"film-autocomplete1"} options={top100Films} getOptionLabel={option => option.label} renderOptions={options => <ComboBox.List>\n            {options.map((option, index) => <ComboBox.Option key={option.label} option={option} index={index}>\n                {option.label}\n              </ComboBox.Option>)}\n          </ComboBox.List>}>\n        <ComboBox.FormControl margin={"normal"}>\n          <ComboBox.Input placeholder={"Type film information"} />\n        </ComboBox.FormControl>\n      </ComboBox>\n      <ComboBox id={"film-autocomplete2"} options={top100Films} getOptionLabel={option => option.label} renderOptions={options => <ComboBox.List>\n            {options.map((option, index) => <ComboBox.Option key={option.label} option={option} index={index}>\n                {option.label}\n              </ComboBox.Option>)}\n          </ComboBox.List>}>\n        <ComboBox.FormControl required color="secondary" margin={"normal"}>\n          <ComboBox.Input placeholder={"Type film information"} />\n        </ComboBox.FormControl>\n      </ComboBox>\n      <ComboBox id={"film-autocomplete3"} options={top100Films} getOptionLabel={option => option.label} renderOptions={options => <ComboBox.List>\n            {options.map((option, index) => <ComboBox.Option key={option.label} option={option} index={index}>\n                {option.label}\n              </ComboBox.Option>)}\n          </ComboBox.List>}>\n        <ComboBox.FormControl required error margin={"normal"}>\n          <ComboBox.Input placeholder={"Type film information"} />\n        </ComboBox.FormControl>\n      </ComboBox>\n    </>\n}',...Multiple.parameters?.docs?.source}}},Group.parameters={...Group.parameters,docs:{...Group.parameters?.docs,source:{originalSource:"{\n  // @ts-ignore\n  render: () => <ComboBox.Anchor>{Multiple.render?.()}</ComboBox.Anchor>\n}",...Group.parameters?.docs?.source}}};const __namedExportsOrder=["Single","Multiple","Group"]}}]);