"use strict";(self.webpackChunkmui_treasury=self.webpackChunkmui_treasury||[]).push([[8221],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{NF:()=>withMDXComponents,Zo:()=>MDXProvider,ah:()=>useMDXComponents,pC:()=>MDXContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./blocks/layout-preset-contentBased/usage.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>usage});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const LayoutPresetContentBasedraw_namespaceObject='import React from "react";\nimport KeyboardArrowLeft from "@mui/icons-material/KeyboardArrowLeft";\nimport Menu from "@mui/icons-material/Menu";\nimport Container from "@mui/material/Container";\nimport CssBaseline from "@mui/material/CssBaseline";\nimport IconButton from "@mui/material/IconButton";\nimport {\n  Content,\n  EdgeSidebar,\n  EdgeTrigger,\n  Footer,\n  getContentBasedScheme,\n  Header,\n  Root,\n  SidebarContent,\n} from "../layout-core";\nimport {\n  ContentMockup,\n  FooterMockup,\n  HeaderMockup,\n  NavSidebarMockup,\n} from "../mockup-layout";\n\nconst scheme = getContentBasedScheme();\n\nexport const LayoutPresetContentBased = () => {\n  return (\n    <Root scheme={scheme}>\n      <CssBaseline />\n      <Header>\n        <HeaderMockup\n          trigger={\n            <EdgeTrigger target={{ anchor: "left", field: "open" }}>\n              {(open, setOpen) => (\n                <IconButton onClick={() => setOpen(!open)} edge="end">\n                  {open ? <KeyboardArrowLeft /> : <Menu />}\n                </IconButton>\n              )}\n            </EdgeTrigger>\n          }\n        />\n      </Header>\n      <EdgeSidebar anchor="left">\n        <SidebarContent>\n          <NavSidebarMockup />\n        </SidebarContent>\n      </EdgeSidebar>\n      <Content>\n        <Container maxWidth="md" sx={{ py: 5 }}>\n          <ContentMockup />\n        </Container>\n      </Content>\n      <Footer>\n        <FooterMockup />\n      </Footer>\n    </Root>\n  );\n};\n';function _createMdxContent(props){const _components=Object.assign({h2:"h2",pre:"pre",code:"code"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Layout/Preset/ContentBased"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"cli",children:"CLI"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-sh",children:"npx mui-treasury@latest clone layout-preset-contentBased\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"layoutpresetcontentbased",children:"LayoutPresetContentBased"}),"\n",(0,jsx_runtime.jsx)(dist.Hw,{code:LayoutPresetContentBasedraw_namespaceObject,language:"tsx"})]})}const usage=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)}}}]);