"use strict";(self.webpackChunkmui_treasury=self.webpackChunkmui_treasury||[]).push([[8877],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>MDXProvider,a:()=>useMDXComponents});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}}),[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"./blocks/layout-v6-app-reactLegacy/usage.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const LayoutV6AppReactLegacyraw_namespaceObject='import {\n  ReactContent,\n  ReactHeader,\n  ReactNextArticle,\n  // @ts-ignore\n} from "../layout-v5-app-reactLegacy/components";\nimport React from "react";\nimport KeyboardArrowDown from "@mui/icons-material/KeyboardArrowDown";\nimport UnfoldMore from "@mui/icons-material/UnfoldMore";\nimport Box from "@mui/material/Box";\nimport Container from "@mui/material/Container";\nimport Fab from "@mui/material/Fab";\nimport Grid from "@mui/material/Grid";\nimport {\n  createTheme,\n  responsiveFontSizes,\n  styled,\n  ThemeProvider,\n} from "@mui/material/styles";\nimport Toolbar from "@mui/material/Toolbar";\nimport Typography from "@mui/material/Typography";\nimport Content from "../layout-core-v6/Content";\nimport SidebarContent from "../layout-core-v6/EdgeSidebarContent";\nimport EdgeSidebarRight, {\n  applyEdgeSidebarRightStyles,\n  toggleTemporaryEdgeSidebarRight,\n} from "../layout-core-v6/EdgeSidebarRight";\nimport EdgeTemporaryClose from "../layout-core-v6/EdgeTemporaryClose";\nimport Footer from "../layout-core-v6/Footer";\nimport Header, { applyHeaderStyles } from "../layout-core-v6/Header";\nimport InsetAvoidingView from "../layout-core-v6/InsetAvoidingView";\nimport InsetSidebar, {\n  applyInsetSidebarStyles,\n} from "../layout-core-v6/InsetSidebar";\nimport InsetSidebarContent from "../layout-core-v6/InsetSidebarContent";\nimport Root from "../layout-core-v6/Root";\n\nconst theme = responsiveFontSizes(\n  createTheme({\n    palette: {\n      primary: {\n        main: "#20232a",\n      },\n      secondary: {\n        main: "#61dafb",\n      },\n    },\n    typography: {\n      fontFamily:\n        \'-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"\',\n      body1: {\n        fontSize: "1.065rem",\n      },\n    },\n    components: {\n      MuiCssBaseline: {\n        styleOverrides: {\n          "strong, b": {\n            fontWeight: "bold",\n          },\n        },\n      },\n    },\n  }),\n);\n// @ts-ignore\ntheme.vars = null;\n\nconst StyledToolbar = styled(Toolbar)(({ theme: { breakpoints } }) => ({\n  minHeight: 60,\n\n  [breakpoints.up("md")]: {\n    minHeight: 60,\n  },\n}));\nconst StyledFab = styled(Fab)({\n  position: "fixed",\n  bottom: 32,\n  right: 16,\n  color: "#61dafb",\n  zIndex: 0,\n\n  "& svg": {\n    fontSize: 32,\n  },\n});\nconst FooterMenu = ({ isHeader, ...props }: any) => {\n  return (\n    <>\n      {isHeader && <Box mt={5} />}\n      <Typography\n        sx={{\n          color: "#fff",\n          lineHeight: 2,\n          ...(isHeader && {\n            opacity: 0.6,\n            lineHeight: 3,\n            textTransform: "uppercase",\n            letterSpacing: "0.08em",\n            fontSize: 14,\n            fontWeight: "bold",\n          }),\n        }}\n        {...props}\n      />\n    </>\n  );\n};\n\nexport function LayoutV6AppReactLegacy() {\n  const sidebarContent = (\n    <Box mt={7.5} ml={3}>\n      {getData()[0].map((label, i) => (\n        <Typography\n          key={i}\n          sx={{\n            lineHeight: 3,\n            textTransform: "uppercase",\n            letterSpacing: "0.08em",\n            fontSize: 14,\n            fontWeight: "bold",\n          }}\n        >\n          {label}{" "}\n          <KeyboardArrowDown\n            color={"inherit"}\n            sx={{\n              marginTop: "-2px",\n              verticalAlign: "middle",\n            }}\n          />\n        </Typography>\n      ))}\n    </Box>\n  );\n  return (\n    <ThemeProvider theme={theme}>\n      <Root\n        sx={{\n          "--InsetSidebarContent-background": "rgb(247, 247, 247)",\n        }}\n      >\n        <StyledFab\n          className="EdgeSidebar-R-trigger"\n          color={"primary"}\n          onClick={() => {\n            toggleTemporaryEdgeSidebarRight();\n          }}\n        >\n          <UnfoldMore />\n        </StyledFab>\n        <Header\n          sx={{\n            position: "sticky",\n            top: 0,\n            bgcolor: "#232323",\n            zIndex: 1,\n            ...applyHeaderStyles({\n              height: "60px",\n            }),\n          }}\n        >\n          <Container>\n            <StyledToolbar disableGutters>\n              <ReactHeader concise />\n            </StyledToolbar>\n          </Container>\n        </Header>\n        <EdgeSidebarRight\n          sx={(theme) => ({\n            ...applyEdgeSidebarRightStyles({\n              theme,\n              config: {\n                xs: {\n                  variant: "temporary",\n                },\n                md: {\n                  variant: "persistent",\n                  persistentBehavior: "none",\n                },\n              },\n            }),\n          })}\n        >\n          <EdgeTemporaryClose />\n          <SidebarContent>{sidebarContent}</SidebarContent>\n        </EdgeSidebarRight>\n        <Content>\n          <Container>\n            <ReactContent />\n            <InsetSidebar\n              sx={{\n                ...applyInsetSidebarStyles({\n                  position: "fixed",\n                  width: {\n                    md: "256px",\n                  },\n                }),\n              }}\n            >\n              <InsetSidebarContent>{sidebarContent}</InsetSidebarContent>\n            </InsetSidebar>\n          </Container>\n        </Content>\n        <Footer>\n          <Box bgcolor={"rgb(40, 44, 52)"}>\n            <Container>\n              <InsetAvoidingView>\n                <ReactNextArticle />\n              </InsetAvoidingView>\n            </Container>\n          </Box>\n          <Box bgcolor={"#20232a"}>\n            <Container>\n              <InsetAvoidingView>\n                {/* @ts-ignore */}\n                <Box pr={{ xs: 0, md: 5 }} pb={5}>\n                  <Grid container>\n                    <Grid item lg={4}>\n                      <Typography sx={{ mt: "56px", color: "#888" }}>\n                        Copyright Â© 2022\n                      </Typography>\n                    </Grid>\n                    <Grid item lg={8} container>\n                      {getData().map((category, i) => (\n                        <Grid key={i} item xs={6}>\n                          {category.map((label, j) => (\n                            <FooterMenu key={j} isHeader={j === 0}>\n                              {label}\n                            </FooterMenu>\n                          ))}\n                        </Grid>\n                      ))}\n                    </Grid>\n                  </Grid>\n                </Box>\n              </InsetAvoidingView>\n            </Container>\n          </Box>\n        </Footer>\n      </Root>\n    </ThemeProvider>\n  );\n}\n\nconst getData = () => [\n  [\n    "Docs",\n    "Installation",\n    "Main Concepts",\n    "Advanced Guides",\n    "API Reference",\n    "Hooks",\n    "Testing",\n    "Concurrent Mode",\n    "Contributing",\n  ],\n  [\n    "Channels",\n    "Github",\n    "Stack Overflow",\n    "Discussion Forums",\n    "Reactiflux Chat",\n    "DEV Community",\n    "Facebook",\n    "Twitter",\n  ],\n  ["Community", "Code of Conduct", "Community Resources"],\n  ["More", "Tutorial", "Blog", "Acknowledgements", "React Native"],\n];\n';function _createMdxContent(props){const _components={code:"code",h2:"h2",pre:"pre",...(0,lib.a)(),...props.components};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"LayoutV6/App/ReactLegacy"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"cli",children:"CLI"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-sh",children:"npx mui-treasury@latest clone layout-v6-app-reactLegacy\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"layoutv6appreactlegacy",children:"LayoutV6AppReactLegacy"}),"\n",(0,jsx_runtime.jsx)(dist.Hw,{code:LayoutV6AppReactLegacyraw_namespaceObject,language:"tsx"})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.a)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}}}]);