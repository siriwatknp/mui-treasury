"use strict";(self.webpackChunkmui_treasury=self.webpackChunkmui_treasury||[]).push([[5110],{"./blocks/field-number-spinner/usage.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const FieldNumberSpinnerraw_namespaceObject='import React, { PropsWithChildren } from "react";\nimport ButtonBase from "@mui/material/ButtonBase";\nimport InputAdornment from "@mui/material/InputAdornment";\nimport OutlinedInput, { OutlinedInputProps } from "@mui/material/OutlinedInput";\nimport SvgIcon from "@mui/material/SvgIcon";\nimport { useNumberInput, UseNumberInputOptions } from "../use-number-input";\n\nexport type FieldNumberSpinnerProps = UseNumberInputOptions & {\n  inputElement?: React.ReactElement;\n} & Omit<OutlinedInputProps, "onChange">;\n\nexport const FieldNumberSpinner = React.forwardRef<\n  any,\n  PropsWithChildren<FieldNumberSpinnerProps>\n>(function FieldNumberSpinner({ children, ...props }, ref) {\n  const {\n    inputElement = <OutlinedInput />,\n    endAdornment = null,\n    defaultValue,\n    allowMouseWheel,\n    keepWithinRange,\n    clampValueOnBlur,\n    focusInputOnChange,\n    formatter,\n    parser,\n    min = 0,\n    ...other\n  } = props;\n\n  const { inputRef, getInputProps, getIncrementProps, getDecrementProps } =\n    useNumberInput({ ...props, min });\n\n  return React.cloneElement(inputElement, {\n    ref,\n    readOnly: true,\n    ...other,\n    sx: {\n      "& input": {\n        textAlign: "center",\n      },\n      ...inputElement.props?.sxProps,\n    },\n    inputRef,\n    inputProps: {\n      size: 4,\n      ...inputElement.props?.inputProps,\n      ...getInputProps(props),\n    },\n    startAdornment: (\n      <InputAdornment position="start">\n        <ButtonBase\n          {...getDecrementProps()}\n          sx={(theme) => ({\n            display: "flex",\n            justifyContent: "center",\n            alignItems: "center",\n            borderRadius: theme.shape.borderRadius,\n            width: 40,\n            height: 40,\n            marginLeft: "-0.25rem",\n            "&:hover:not(.Mui-disabled)": {\n              color: theme.palette.text.primary,\n              backgroundColor: theme.palette.action.hover,\n            },\n            "&.Mui-disabled": {\n              opacity: 0.5,\n              cursor: "not-allowed",\n            },\n          })}\n        >\n          <SvgIcon>\n            <path d="M0 0h24v24H0z" fill="none" />\n            <path d="M19 13H5v-2h14v2z" />\n          </SvgIcon>\n        </ButtonBase>\n      </InputAdornment>\n    ),\n    endAdornment: (\n      <InputAdornment position="end">\n        <ButtonBase\n          {...getIncrementProps()}\n          sx={(theme) => ({\n            display: "flex",\n            justifyContent: "center",\n            alignItems: "center",\n            borderRadius: theme.shape.borderRadius,\n            width: 40,\n            height: 40,\n            marginRight: "-0.25rem",\n            "&:hover:not(.Mui-disabled)": {\n              color: theme.palette.text.primary,\n              backgroundColor: theme.palette.action.hover,\n            },\n            "&.Mui-disabled": {\n              opacity: 0.5,\n              cursor: "not-allowed",\n            },\n          })}\n        >\n          <SvgIcon>\n            <path d="M0 0h24v24H0z" fill="none" />\n            <path d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z" />\n          </SvgIcon>\n        </ButtonBase>\n      </InputAdornment>\n    ),\n  });\n});\n';function _createMdxContent(props){const _components={code:"code",h2:"h2",pre:"pre",...(0,lib.a)(),...props.components};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Field/Number/Spinner"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"cli",children:"CLI"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-sh",children:"npx mui-treasury@latest clone field-number-spinner use-number-input\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"fieldnumberspinner",children:"FieldNumberSpinner"}),"\n",(0,jsx_runtime.jsx)(dist.Hw,{code:FieldNumberSpinnerraw_namespaceObject,language:"tsx"})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.a)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}},"./blocks/field-number-spinner/FieldNumberSpinner.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Filled:()=>Filled,Outlined:()=>Outlined,__namedExportsOrder:()=>__namedExportsOrder,default:()=>FieldNumberSpinner_stories});var react=__webpack_require__("./node_modules/react/index.js"),FilledInput=__webpack_require__("./node_modules/@mui/material/FilledInput/FilledInput.js"),storyDialog=__webpack_require__("./.storybook/decorators/storyDialog.tsx"),ButtonBase=__webpack_require__("./node_modules/@mui/material/ButtonBase/ButtonBase.js"),InputAdornment=__webpack_require__("./node_modules/@mui/material/InputAdornment/InputAdornment.js"),OutlinedInput=__webpack_require__("./node_modules/@mui/material/OutlinedInput/OutlinedInput.js"),SvgIcon=__webpack_require__("./node_modules/@mui/material/SvgIcon/SvgIcon.js"),use_number_input=__webpack_require__("./blocks/use-number-input/index.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const FieldNumberSpinner=react.forwardRef((function FieldNumberSpinner({children,...props},ref){const{inputElement=react.createElement(OutlinedInput.Z,null),endAdornment=null,defaultValue,allowMouseWheel,keepWithinRange,clampValueOnBlur,focusInputOnChange,formatter,parser,min=0,...other}=props,{inputRef,getInputProps,getIncrementProps,getDecrementProps}=(0,use_number_input.MM)({...props,min});return react.cloneElement(inputElement,{ref,readOnly:!0,...other,sx:{"& input":{textAlign:"center"},...inputElement.props?.sxProps},inputRef,inputProps:{size:4,...inputElement.props?.inputProps,...getInputProps(props)},startAdornment:react.createElement(InputAdornment.Z,{position:"start"},react.createElement(ButtonBase.Z,_extends({},getDecrementProps(),{sx:theme=>({display:"flex",justifyContent:"center",alignItems:"center",borderRadius:theme.shape.borderRadius,width:40,height:40,marginLeft:"-0.25rem","&:hover:not(.Mui-disabled)":{color:theme.palette.text.primary,backgroundColor:theme.palette.action.hover},"&.Mui-disabled":{opacity:.5,cursor:"not-allowed"}})}),react.createElement(SvgIcon.Z,null,react.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),react.createElement("path",{d:"M19 13H5v-2h14v2z"})))),endAdornment:react.createElement(InputAdornment.Z,{position:"end"},react.createElement(ButtonBase.Z,_extends({},getIncrementProps(),{sx:theme=>({display:"flex",justifyContent:"center",alignItems:"center",borderRadius:theme.shape.borderRadius,width:40,height:40,marginRight:"-0.25rem","&:hover:not(.Mui-disabled)":{color:theme.palette.text.primary,backgroundColor:theme.palette.action.hover},"&.Mui-disabled":{opacity:.5,cursor:"not-allowed"}})}),react.createElement(SvgIcon.Z,null,react.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),react.createElement("path",{d:"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"}))))})}));var usage=__webpack_require__("./blocks/field-number-spinner/usage.mdx");function FieldNumberSpinner_stories_extends(){return FieldNumberSpinner_stories_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},FieldNumberSpinner_stories_extends.apply(this,arguments)}const FieldNumberSpinner_stories={title:"Field/Number/Spinner",component:FieldNumberSpinner,parameters:{layout:"centered",githubUsername:"siriwatknp",modules:["use-number-input"]},decorators:[(0,storyDialog.Z)(usage.default)]},Outlined={render:args=>react.createElement(FieldNumberSpinner,args)},Filled={render:args=>react.createElement(FieldNumberSpinner,FieldNumberSpinner_stories_extends({},args,{inputElement:react.createElement(FilledInput.Z,{hiddenLabel:!0})}))};Outlined.parameters={...Outlined.parameters,docs:{...Outlined.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    return <FieldNumberSpinner {...args} />;\n  }\n}",...Outlined.parameters?.docs?.source}}},Filled.parameters={...Filled.parameters,docs:{...Filled.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    return <FieldNumberSpinner {...args} inputElement={<FilledInput hiddenLabel />} />;\n  }\n}",...Filled.parameters?.docs?.source}}};const __namedExportsOrder=["Outlined","Filled"]}}]);