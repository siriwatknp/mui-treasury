"use strict";(self.webpackChunkmui_treasury=self.webpackChunkmui_treasury||[]).push([[1191],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>MDXProvider,a:()=>useMDXComponents});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}}),[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"./blocks/mockup-layout/usage.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const ContentMockupraw_namespaceObject='import React from "react";\nimport { BoxProps } from "@mui/material/Box";\nimport Divider from "@mui/material/Divider";\nimport Stack from "@mui/material/Stack";\nimport { Square } from "../mockup-shape";\nimport { randomBetween } from "../mockup-utils";\n\nexport const Paragraph = ({\n  lineCount = 5,\n  sx,\n}: {\n  lineCount?: number;\n  sx?: BoxProps["sx"];\n}) => {\n  return (\n    <>\n      {[...Array(lineCount).fill(undefined)].map((_, index) => (\n        <Square\n          key={index}\n          sx={{\n            height: 16,\n            width: randomBetween(96, 100, "%"),\n            ...(index !== 0 && { mt: 1.5 }),\n            ...sx,\n          }}\n        />\n      ))}\n    </>\n  );\n};\n\nexport const ContentMockup = () => {\n  return (\n    <div>\n      <Square sx={{ height: 32, width: 160 }} />\n      <Square sx={{ height: 18, width: 120, mt: 1.5 }} />\n      <br />\n      <br />\n      <Paragraph />\n      <br />\n      <Divider />\n      <br />\n      <Paragraph />\n      <br />\n      <br />\n      <Stack direction="row" spacing={1}>\n        <Square sx={{ height: 200, flexGrow: 1 }} />\n        <Square sx={{ height: 200, flexGrow: 1 }} />\n        <Square sx={{ height: 200, flexGrow: 1 }} />\n      </Stack>\n      <br />\n      <br />\n      <Square sx={{ height: 32, width: 240, mx: "auto" }} />\n      <Square sx={{ height: 18, width: 120, mt: 1.5, mx: "auto" }} />\n      <br />\n      <br />\n      <Paragraph sx={{ mx: "auto" }} />\n      <br />\n      <Stack direction="row" spacing={1}>\n        <Square sx={{ height: 100, flexGrow: 1 }} />\n        <Square sx={{ height: 100, flexGrow: 1 }} />\n        <Square sx={{ height: 100, flexGrow: 1 }} />\n        <Square sx={{ height: 100, flexGrow: 1 }} />\n      </Stack>\n    </div>\n  );\n};\n',FooterMockupraw_namespaceObject='import React from "react";\nimport Box, { BoxProps } from "@mui/material/Box";\nimport Container from "@mui/material/Container";\nimport Grid from "@mui/material/Grid";\nimport Stack from "@mui/material/Stack";\nimport { Circle, Pill, Square } from "../mockup-shape";\nimport { randomBetween } from "../mockup-utils";\n\nexport const LinkGroup = ({\n  lineCount = 5,\n  sx,\n}: {\n  lineCount?: number;\n  sx?: BoxProps["sx"];\n}) => {\n  return (\n    <>\n      <Pill sx={{ height: 12, width: 40 }} />\n      <br />\n      <Stack spacing={2}>\n        {[...Array(lineCount).fill(undefined)].map((_, index) => (\n          <Square\n            key={index}\n            sx={{ width: randomBetween(56, 120), height: 16 }}\n          />\n        ))}\n      </Stack>\n    </>\n  );\n};\n\nexport const FooterMockup = ({\n  disableGutters = false,\n  ...props\n}: BoxProps & { disableGutters?: boolean }) => {\n  return (\n    <Box\n      {...props}\n      sx={{\n        borderTop: "1px solid",\n        borderColor: (theme) =>\n          theme.palette.mode === "dark" ? "rgba(255,255,255,0.12)" : "grey.200",\n        bgcolor: (theme) =>\n          theme.palette.mode === "dark" ? "rgba(255,255,255,0.07)" : "grey.50",\n        ...props.sx,\n      }}\n    >\n      <Container sx={{ py: 5, minHeight: 300 }} disableGutters={disableGutters}>\n        <Grid container spacing={2}>\n          <Grid\n            item\n            xs={12}\n            sm={6}\n            md={3}\n            sx={{ order: { xs: 2, sm: 1, md: 1 } }}\n          >\n            <Square sx={{ width: 72, height: 48 }} />\n            <br />\n            <Pill sx={{ height: 14 }} />\n            <br />\n          </Grid>\n          <Grid item xs={6} md={3} sx={{ order: { xs: 3, md: 2 } }}>\n            <LinkGroup />\n          </Grid>\n          <Grid item xs={6} md={3} sx={{ order: { xs: 4, md: 3 } }}>\n            <LinkGroup />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            sm={6}\n            md={3}\n            sx={{ order: { xs: 1, sm: 2, md: 4 } }}\n          >\n            <Stack\n              direction="row"\n              spacing={1}\n              sx={{ justifyContent: { xs: "center", sm: "flex-start" } }}\n            >\n              <Square sx={{ height: 36, flexBasis: 160, flexShrink: 1 }} />\n              <Square sx={{ height: 36, flexBasis: 56, flexShrink: 1 }} />\n            </Stack>\n            <br />\n            <Stack\n              direction="row"\n              spacing={1}\n              sx={{ justifyContent: { xs: "center", sm: "flex-start" } }}\n            >\n              <Circle />\n              <Circle />\n              <Circle />\n            </Stack>\n            <br />\n          </Grid>\n        </Grid>\n      </Container>\n    </Box>\n  );\n};\n',HeaderMockupraw_namespaceObject='import React from "react";\nimport Avatar from "@mui/material/Avatar";\nimport Box, { BoxProps } from "@mui/material/Box";\nimport { Pill, Square } from "../mockup-shape";\n\nexport const HeaderMockup = ({\n  trigger,\n  ...props\n}: { trigger?: React.ReactNode } & BoxProps) => {\n  return (\n    <Box\n      {...props}\n      sx={{\n        display: "flex",\n        alignItems: "center",\n        justifyContent: { xs: "space-between", sm: "flex-start" },\n        gap: 2,\n        px: 2,\n        flex: 1,\n        ...props.sx,\n      }}\n    >\n      {trigger}\n      <Square />\n\n      <Box\n        ml="auto"\n        sx={{\n          display: { xs: "none", sm: "flex" },\n          alignItems: "center",\n          gap: { xs: 2, md: 3 },\n        }}\n      >\n        <Pill />\n        <Pill />\n        <Pill />\n        <Pill />\n      </Box>\n\n      <Avatar sx={{ width: 32, height: 32, ml: { xs: 0, sm: 2 } }} />\n    </Box>\n  );\n};\n';function _createMdxContent(props){const _components={code:"code",h2:"h2",h3:"h3",pre:"pre",...(0,lib.a)(),...props.components};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Mockup/Layout"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"cli",children:"CLI"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-sh",children:"npx mui-treasury@latest clone mockup-layout\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"mockuplayout",children:"MockupLayout"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"contentmockup",children:"ContentMockup"}),"\n",(0,jsx_runtime.jsx)(dist.Hw,{code:ContentMockupraw_namespaceObject,language:"tsx"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"footermockup",children:"FooterMockup"}),"\n",(0,jsx_runtime.jsx)(dist.Hw,{code:FooterMockupraw_namespaceObject,language:"tsx"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"headermockup",children:"HeaderMockup"}),"\n",(0,jsx_runtime.jsx)(dist.Hw,{code:HeaderMockupraw_namespaceObject,language:"tsx"})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.a)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}}}]);