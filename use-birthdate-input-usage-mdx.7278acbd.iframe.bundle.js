"use strict";(self.webpackChunkmui_treasury=self.webpackChunkmui_treasury||[]).push([[8584],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{NF:()=>withMDXComponents,Zo:()=>MDXProvider,ah:()=>useMDXComponents,pC:()=>MDXContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./blocks/use-birthdate-input/usage.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>usage});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const useBirthdateInputraw_namespaceObject='import React from "react";\nimport { useSeparatorInput } from "../use-input-siblings";\n\nexport interface UseBirthdateInputOptions {\n  /**\n   * separator between number, 10/02/1999\n   * @default "/"\n   */\n  separator?: string;\n  /**\n   * initial value (don\'t use together with `value`)\n   */\n  defaultValue?: string;\n  /**\n   * value for controlled input\n   */\n  value?: string;\n  /**\n   * a callback function when input value changed\n   */\n  onChange?: (value: string, meta: { invalid: boolean }) => void;\n}\ninterface InputHanders {\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyDown?: (event: React.KeyboardEvent<HTMLInputElement>) => void;\n}\n\nconst dayMonthYearValidator = (day?: string, month?: string, year?: string) => {\n  return (\n    Number(day) >= 1 &&\n    Number(day) <= 31 &&\n    Number(month) >= 1 &&\n    Number(month) <= 12 &&\n    Number(year) >= 1500 &&\n    Number(year) <= 2999\n  );\n};\n\nexport const useBirthdateInput = (options: UseBirthdateInputOptions = {}) => {\n  const { separator = "/" } = options;\n  const result = useSeparatorInput({\n    ...options,\n    separator,\n    maxLength: [2, 2, 4],\n    validator: (value) => dayMonthYearValidator(...value.split(separator)),\n  });\n  return {\n    ...result,\n    getInputProps: (handlers?: InputHanders) => ({\n      size: 10,\n      pattern: "[0-9]{2}.[0-9]{2}.[0-9]{4}",\n      inputMode: "numeric" as const,\n      ...result.getInputProps(handlers),\n    }),\n  };\n};\n';function _createMdxContent(props){const _components=Object.assign({h2:"h2",pre:"pre",code:"code"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"hook/useBirthdateInput"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"cli",children:"CLI"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-sh",children:"npx mui-treasury@latest clone use-birthdate-input use-input-siblings\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"usebirthdateinput",children:"UseBirthdateInput"}),"\n",(0,jsx_runtime.jsx)(dist.Hw,{code:useBirthdateInputraw_namespaceObject,language:"tsx"})]})}const usage=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)}}}]);