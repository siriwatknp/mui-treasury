"use strict";(self.webpackChunkmui_treasury=self.webpackChunkmui_treasury||[]).push([[5667],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>MDXProvider,a:()=>useMDXComponents});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}}),[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"./blocks/card-blog/usage.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const CardBlograw_namespaceObject='import React from "react";\nimport Box from "@mui/material/Box";\nimport Button from "@mui/material/Button";\nimport Card from "@mui/material/Card";\nimport CardContent from "@mui/material/CardContent";\nimport CardMedia from "@mui/material/CardMedia";\nimport { Info, InfoEyebrow, InfoSubtitle, InfoTitle } from "../info-basic";\n\nexport function CardBlog() {\n  return (\n    <Card\n      sx={(theme) => ({\n        margin: "auto",\n        borderRadius: theme.spacing(2), // 16px\n        transition: "0.3s",\n        boxShadow: "0px 14px 80px rgba(34, 35, 58, 0.2)",\n        position: "relative",\n        maxWidth: 500,\n        marginLeft: "auto",\n        overflow: "initial",\n        background: "#ffffff",\n        display: "flex",\n        flexDirection: "column",\n        alignItems: "center",\n        paddingBottom: theme.spacing(2),\n        [theme.breakpoints.up("md")]: {\n          flexDirection: "row",\n          paddingTop: theme.spacing(2),\n        },\n      })}\n    >\n      <CardMedia\n        image={\n          "https://upload.wikimedia.org/wikipedia/commons/thumb/3/3f/Git_icon.svg/2000px-Git_icon.svg.png"\n        }\n        sx={(theme) => ({\n          width: "88%",\n          marginLeft: "auto",\n          marginRight: "auto",\n          marginTop: theme.spacing(-3),\n          height: 0,\n          paddingBottom: "48%",\n          borderRadius: theme.spacing(2),\n          backgroundColor: "#fff",\n          position: "relative",\n          [theme.breakpoints.up("md")]: {\n            width: "100%",\n            marginLeft: theme.spacing(-3),\n            marginTop: 0,\n            transform: "translateX(-8px)",\n          },\n          "&:after": {\n            content: \'" "\',\n            position: "absolute",\n            top: 0,\n            left: 0,\n            width: "100%",\n            height: "100%",\n            backgroundImage: "linear-gradient(147deg, #fe8a39 0%, #fd3838 74%)",\n            borderRadius: theme.spacing(2), // 16\n            opacity: 0.5,\n          },\n        })}\n      />\n      <CardContent>\n        <Info\n          useStyles={(theme) => {\n            const family =\n              "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif";\n            return {\n              eyebrow: {\n                textTransform: "uppercase",\n                letterSpacing: "1px",\n                fontSize: 12,\n                marginBottom: "0.875em",\n                display: "inline-block",\n              },\n              title: {\n                fontSize: 20,\n                fontWeight: "bold",\n                marginBottom: "0.35em",\n                fontFamily: family,\n              },\n              subtitle: {\n                marginBottom: theme.spacing(2),\n                fontSize: "0.8rem",\n                letterSpacing: "0.00938em",\n                fontFamily: family,\n              },\n            };\n          }}\n        >\n          <InfoEyebrow>28 MAR 2019</InfoEyebrow>\n          <InfoTitle>What is Git ?</InfoTitle>\n          <InfoSubtitle>\n            Git is a distributed version control system. Every dev has a working\n            copy of the code and...\n          </InfoSubtitle>\n        </Info>\n        <Button\n          sx={{\n            backgroundImage: "linear-gradient(147deg, #fe8a39 0%, #fd3838 74%)",\n            boxShadow: "0px 4px 32px rgba(252, 56, 56, 0.4)",\n            borderRadius: 100,\n            paddingLeft: 3,\n            paddingRight: 3,\n            color: "#ffffff",\n          }}\n        >\n          Read more\n        </Button>\n      </CardContent>\n    </Card>\n  );\n}\n';function _createMdxContent(props){const _components={code:"code",h2:"h2",pre:"pre",...(0,lib.a)(),...props.components};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Card/Blog"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"cli",children:"CLI"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-sh",children:"npx mui-treasury@latest clone card-blog\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"cardblog",children:"CardBlog"}),"\n",(0,jsx_runtime.jsx)(dist.Hw,{code:CardBlograw_namespaceObject,language:"tsx"})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.a)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}}}]);