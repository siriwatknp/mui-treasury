"use strict";(self.webpackChunkmui_treasury=self.webpackChunkmui_treasury||[]).push([[8382],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{NF:()=>withMDXComponents,Zo:()=>MDXProvider,ah:()=>useMDXComponents,pC:()=>MDXContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./blocks/menu-download/usage.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>usage});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const MenuDownloadraw_namespaceObject='import React from "react";\nimport ExpandMoreIcon from "@mui/icons-material/ExpandMore";\nimport GetAppRoundedIcon from "@mui/icons-material/GetAppRounded";\nimport Button from "@mui/material/Button";\nimport Menu, { menuClasses } from "@mui/material/Menu";\nimport MenuItem from "@mui/material/MenuItem";\n\nexport function MenuDownload() {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  return (\n    <div>\n      <Button\n        aria-controls="simple-menu"\n        aria-haspopup="true"\n        onClick={(event) => setAnchorEl(event.currentTarget)}\n        sx={{\n          minWidth: 140,\n          background: "white",\n          fontWeight: 500,\n          textTransform: "capitalize",\n          borderColor: "primary.light",\n          borderStyle: "solid",\n          borderWidth: "2px",\n          borderRadius: "4px",\n          paddingTop: "8px",\n          paddingBottom: "8px",\n          "& > span": {\n            fontSize: "0.9em",\n          },\n        }}\n        endIcon={\n          <ExpandMoreIcon\n            sx={{\n              color: "primary.light",\n              userSelect: "none",\n              pointerEvents: "none",\n              transform: anchorEl ? "rotate(180deg)" : "rotate(0deg)",\n            }}\n          />\n        }\n      >\n        <GetAppRoundedIcon\n          sx={{\n            color: "primary.light",\n            userSelect: "none",\n            pointerEvents: "none",\n            marginRight: "6px",\n          }}\n        />\n        Download\n      </Button>\n      <Menu\n        id="simple-menu"\n        anchorOrigin={{\n          vertical: "bottom",\n          horizontal: "left",\n        }}\n        transformOrigin={{\n          vertical: "top",\n          horizontal: "left",\n        }}\n        keepMounted\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={() => setAnchorEl(null)}\n        sx={{\n          [`& .${menuClasses.paper}`]: {\n            minWidth: 140,\n            borderRadius: "4px",\n            marginTop: "8px",\n          },\n        }}\n      >\n        <MenuItem onClick={() => setAnchorEl(null)}>PDF File</MenuItem>\n        <MenuItem onClick={() => setAnchorEl(null)}>CSV File</MenuItem>\n        <MenuItem onClick={() => setAnchorEl(null)}>XLS File</MenuItem>\n      </Menu>\n    </div>\n  );\n}\n';function _createMdxContent(props){const _components=Object.assign({h2:"h2",pre:"pre",code:"code"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Menu/Download"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"cli",children:"CLI"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-sh",children:"npx mui-treasury@latest clone menu-download\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"menudownload",children:"MenuDownload"}),"\n",(0,jsx_runtime.jsx)(dist.Hw,{code:MenuDownloadraw_namespaceObject,language:"tsx"})]})}const usage=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)}}}]);