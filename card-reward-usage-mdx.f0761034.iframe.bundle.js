"use strict";(self.webpackChunkmui_treasury=self.webpackChunkmui_treasury||[]).push([[631],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{NF:()=>withMDXComponents,Zo:()=>MDXProvider,ah:()=>useMDXComponents,pC:()=>MDXContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./blocks/card-reward/usage.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>usage});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const CardRewardraw_namespaceObject='import React from "react";\nimport Button from "@mui/material/Button";\nimport Card from "@mui/material/Card";\nimport CardContent from "@mui/material/CardContent";\nimport CardMedia from "@mui/material/CardMedia";\nimport { styled } from "@mui/material/styles";\nimport Typography from "@mui/material/Typography";\n\nconst StyledCard = styled(Card)(({ theme: { breakpoints, spacing } }) => ({\n  width: 360,\n  maxWidth: "100%",\n\n  // 16px\n  borderRadius: spacing(2),\n\n  transition: "0.3s",\n  boxShadow: "0px 14px 80px rgba(34, 35, 58, 0.2)",\n  position: "relative",\n  overflow: "initial",\n  display: "flex",\n  flexDirection: "column",\n  alignItems: "center",\n  textAlign: "center",\n  paddingLeft: 8,\n  paddingRight: 8,\n\n  background:\n    "linear-gradient(34deg, rgba(55,16,83,1) 0%, rgba(162,73,190,1) 29%, rgba(33,16,83,1) 92%)",\n\n  [breakpoints.up("sm")]: {\n    textAlign: "left",\n    flexDirection: "row-reverse",\n  },\n}));\n\nconst CardMediaMedia = styled(CardMedia)(({ theme: { breakpoints } }) => ({\n  flexShrink: 0,\n  width: "30%",\n  paddingTop: "30%",\n  marginLeft: "auto",\n  marginRight: "auto",\n\n  [breakpoints.up("sm")]: {\n    marginRight: "initial",\n  },\n}));\n\nconst TypographyOverline = styled(Typography)(({}) => ({\n  lineHeight: 2,\n  color: "#ffffff",\n  fontWeight: "bold",\n  fontSize: "0.625rem",\n  opacity: 0.7,\n}));\n\nconst TypographyHeading = styled(Typography)(({}) => ({\n  fontWeight: 900,\n  color: "#ffffff",\n  letterSpacing: 0.5,\n}));\n\nconst StyledButton = styled(Button)(({ theme: { breakpoints } }) => ({\n  backgroundColor: "rgba(255, 255, 255, 0.15)",\n  borderRadius: 100,\n  paddingLeft: 32,\n  paddingRight: 32,\n  color: "#ffffff",\n  textTransform: "none",\n  width: "100%",\n\n  "&:hover": {\n    backgroundColor: "rgba(255, 255, 255, 0.32)",\n  },\n\n  [breakpoints.up("sm")]: {\n    width: "auto",\n  },\n}));\n\nexport function CardReward() {\n  return (\n    <StyledCard>\n      <CardMediaMedia\n        image={"https://jkkm.info/ui/images/awards/victory.png"}\n      />\n      <CardContent>\n        <TypographyOverline variant={"overline"}>\n          Songkran Festival Contest\n        </TypographyOverline>\n        <TypographyHeading variant={"h6"} gutterBottom>\n          Result Announced\n        </TypographyHeading>\n        <StyledButton>View Winners</StyledButton>\n      </CardContent>\n    </StyledCard>\n  );\n}\n';function _createMdxContent(props){const _components=Object.assign({h2:"h2",pre:"pre",code:"code"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Card/Reward"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"cli",children:"CLI"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-sh",children:"npx mui-treasury@latest clone card-reward\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"cardreward",children:"CardReward"}),"\n",(0,jsx_runtime.jsx)(dist.Hw,{code:CardRewardraw_namespaceObject,language:"tsx"})]})}const usage=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)}}}]);