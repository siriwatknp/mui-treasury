"use strict";(self.webpackChunkmui_treasury=self.webpackChunkmui_treasury||[]).push([[4942],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>MDXProvider,a:()=>useMDXComponents});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}}),[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"./blocks/field-combo-basic/usage.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const FieldComboBasicraw_namespaceObject='import React, { useContext } from "react";\nimport useAutocomplete from "@mui/material/useAutocomplete";\nimport { ComboAnchor, ComboFormControl, ComboGroup, ComboInput, ComboLabel, ComboList, ComboOption } from "./ComboBoxCompounds";\nimport { AnchorContext, ComboBoxContext } from "./ComboBoxContext";\nexport function ComboBox({\n  children,\n  renderOptions,\n  renderGroupedOptions,\n  ...props\n}) {\n  if (!props.getOptionLabel) {\n    throw new Error(\'"getOptionLabel" is required\');\n  }\n  const {\n    getRootProps,\n    getInputProps,\n    getInputLabelProps,\n    getListboxProps,\n    getOptionProps,\n    groupedOptions,\n    anchorEl,\n    setAnchorEl,\n    popupOpen\n  } = useAutocomplete({\n    openOnFocus: true,\n    ...props,\n    // @ts-ignore\n    multiple: false,\n    componentName: "ComboBox"\n  });\n  const comboAnchor = useContext(AnchorContext);\n  return /*#__PURE__*/React.createElement(ComboBoxContext.Provider, {\n    value: {\n      anchorEl: comboAnchor ?? anchorEl,\n      setAnchorEl,\n      popupOpen,\n      getRootProps,\n      getInputProps,\n      getInputLabelProps,\n      getListboxProps,\n      getOptionProps\n    }\n  }, children, "groupBy" in props ? renderGroupedOptions?.(groupedOptions) : renderOptions?.(groupedOptions));\n}\nComboBox.Anchor = ComboAnchor;\nComboBox.FormControl = ComboFormControl;\nComboBox.Label = ComboLabel;\nComboBox.Input = ComboInput;\nComboBox.List = ComboList;\nComboBox.Group = ComboGroup;\nComboBox.Option = ComboOption;';function _createMdxContent(props){const _components={code:"code",h2:"h2",pre:"pre",...(0,lib.a)(),...props.components};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Field/Combo/Basic"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"cli",children:"CLI"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-sh",children:"npx mui-treasury@latest clone field-combo-basic\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"fieldcombobasic",children:"FieldComboBasic"}),"\n",(0,jsx_runtime.jsx)(dist.Hw,{code:FieldComboBasicraw_namespaceObject,language:"tsx"})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.a)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}}}]);