"use strict";(self.webpackChunkmui_treasury=self.webpackChunkmui_treasury||[]).push([[6331],{"./blocks/use-pin-input/usage.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const usePinInputraw_namespaceObject='import React from "react";\nimport {\n  InputHanders,\n  useInput,\n  useInputSiblings,\n  useIsFirstMount,\n} from "../use-input-siblings";\n\nconst numberValidator = (value: string) => new RegExp(/\\d/).test(value);\nconst alphanumericValidator = (value: string) =>\n  new RegExp(/[a-zA-Z0-9]/).test(value);\n\nexport interface UsePinInputOptions {\n  /**\n   * If `true`, the input will be focused\n   */\n  autoFocus?: boolean;\n  /**\n   * The type of values the pin-input should allow\n   */\n  type?: "number" | "alphanumeric";\n  /**\n   * If `true`, the input\'s value will be masked just like `type=password`\n   */\n  mask?: boolean;\n  /**\n   * If `true`, the pin input component signals to its fields that they should use `autocomplete="one-time-code"`.\n   */\n  otp?: boolean;\n  /**\n   * number of pin inputs (this number should never change between render)\n   */\n  pinLength?: number;\n  /**\n   * initial value (don\'t use together with `value`)\n   */\n  defaultValue?: string;\n  /**\n   * value for controlled input\n   */\n  value?: string;\n  /**\n   * a callback function when input value changed\n   */\n  onChange?: (value: string, meta: { invalid: boolean }) => void;\n  /**\n   * a callback function when all inputs are not focused\n   */\n  onBlur?: (event: React.FocusEvent<HTMLInputElement>) => void;\n}\n\nexport const usePinInput = (options: UsePinInputOptions = {}) => {\n  const {\n    pinLength = 4,\n    defaultValue,\n    value,\n    type = "number",\n    mask = false,\n  } = options;\n  const validator = type === "number" ? numberValidator : alphanumericValidator;\n  const splittedValue = (value || defaultValue || "").split("");\n  const siblings = [...Array(pinLength).fill(undefined)].map((_, index) =>\n    useInput({\n      autoFocus: options.autoFocus && index === 0,\n      maxLength: 1,\n      validator,\n      value: splittedValue[index],\n    })\n  );\n\n  const isFirstMount = useIsFirstMount();\n  const pinArray = siblings.map(({ value }) => value);\n  React.useEffect(() => {\n    if (!isFirstMount) {\n      options.onChange?.(pinArray.join(""), {\n        invalid: siblings.some((pinInput) => pinInput.invalid),\n      });\n    }\n  }, pinArray);\n\n  const pins = useInputSiblings({\n    siblings,\n    onBlur: options?.onBlur,\n  });\n\n  return {\n    pins: pins.map((getInputProps) => {\n      return (handlers?: InputHanders) => {\n        const inputProps = getInputProps(handlers);\n        return {\n          "aria-label": "Please enter your pin code",\n          size: 1,\n          type: mask ? "password" : "tel",\n          pattern: "d",\n          placeholder: "â—‹",\n          inputMode: "numeric" as const,\n          autoComplete: options.otp ? "one-time-code" : "off",\n          ...inputProps,\n          onChange: (event: React.ChangeEvent<HTMLInputElement>) => {\n            let inputValue = event.target.value;\n            if (inputValue.length > 2) {\n              inputValue =\n                inputValue[0] === inputProps.value\n                  ? inputValue.slice(1)\n                  : inputValue.substring(-1);\n              handlers?.onChange?.(event);\n              // copy & paste\n              const valueArray = inputValue\n                .split("")\n                .filter(validator)\n                .slice(0, siblings.length);\n              valueArray.forEach((val, index) => {\n                siblings[index].setValue(val);\n              });\n              const nextInput =\n                siblings[\n                  Math.min(valueArray.length, siblings.length - 1)\n                ].getDOM();\n              if (nextInput) nextInput.focus();\n            } else {\n              inputProps.onChange(event);\n            }\n          },\n        };\n      };\n    }),\n  };\n};\n';function _createMdxContent(props){const _components={code:"code",h2:"h2",pre:"pre",...(0,lib.a)(),...props.components};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Hook/usePinInput"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"cli",children:"CLI"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-sh",children:"npx mui-treasury@latest clone use-pin-input use-input-siblings\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"usepininput",children:"UsePinInput"}),"\n",(0,jsx_runtime.jsx)(dist.Hw,{code:usePinInputraw_namespaceObject,language:"tsx"})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.a)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}},"./blocks/use-pin-input/usePinInput.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:()=>Example,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_storybook_decorators_storyDialog__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./.storybook/decorators/storyDialog.tsx"),_usage_mdx__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./blocks/use-pin-input/usage.mdx"),_usePinInput__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./blocks/use-pin-input/usePinInput.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const __WEBPACK_DEFAULT_EXPORT__={title:"Hook/usePinInput",argTypes:{type:{control:{type:"select",options:["number","alphanumeric"]}},onChange:{action:"change"},onBlur:{action:"blur"}},args:{type:"number",mask:!1,autoFocus:!1,otp:!1},parameters:{layout:"centered",githubUsername:"siriwatknp",modules:["use-input-siblings"]},decorators:[(0,_storybook_decorators_storyDialog__WEBPACK_IMPORTED_MODULE_1__.Z)(_usage_mdx__WEBPACK_IMPORTED_MODULE_2__.default)]},Example={render:args=>{const{pins}=(0,_usePinInput__WEBPACK_IMPORTED_MODULE_3__.b)({...args,pinLength:4});return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{display:"flex",gap:8}},pins.map(((getInputProps,index)=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("input",_extends({key:index},getInputProps())))))}};Example.parameters={...Example.parameters,docs:{...Example.parameters?.docs,source:{originalSource:'{\n  render: args => {\n    const {\n      pins\n    } = usePinInput({\n      ...args,\n      pinLength: 4\n    });\n    return <div style={{\n      display: "flex",\n      gap: 8\n    }}>\n        {pins.map((getInputProps, index) => <input key={index} {...getInputProps()} />)}\n      </div>;\n  }\n} satisfies Story',...Example.parameters?.docs?.source}}};const __namedExportsOrder=["Example"]},"./.storybook/decorators/storyDialog.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>storyDialog});var _mdx_js_react__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_material_Container__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@mui/material/Container/Container.js"),_mui_material_Dialog__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mui/material/Dialog/Dialog.js"),_mui_material_DialogContent__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mui/material/DialogContent/DialogContent.js"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),_storybook_theming__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/theming/dist/chunk-ZHZY55TS.mjs"),_storybook_theming__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@storybook/theming/dist/index.mjs");const defaultTheme={..._storybook_theming__WEBPACK_IMPORTED_MODULE_1__.np.light,color:_storybook_theming__WEBPACK_IMPORTED_MODULE_1__.$_,background:_storybook_theming__WEBPACK_IMPORTED_MODULE_1__.Oq,typography:_storybook_theming__WEBPACK_IMPORTED_MODULE_1__.cp},defaultComponents={code:_storybook_blocks__WEBPACK_IMPORTED_MODULE_2__.bD,a:_storybook_blocks__WEBPACK_IMPORTED_MODULE_2__.Ct,..._storybook_blocks__WEBPACK_IMPORTED_MODULE_2__.lO};function storyDialog(Component){return function storyDialogDecorator(Story,{globals,...rest}){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Dialog__WEBPACK_IMPORTED_MODULE_3__.Z,{fullScreen:!0,open:globals.blockUsage||!1,transitionDuration:{enter:300,exit:400},slotProps:{backdrop:{sx:theme=>({backgroundColor:`rgba(${theme.vars.palette.background.defaultChannel}/0.5)`})}}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_DialogContent__WEBPACK_IMPORTED_MODULE_4__.Z,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Container__WEBPACK_IMPORTED_MODULE_5__.Z,{maxWidth:"md"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_storybook_theming__WEBPACK_IMPORTED_MODULE_6__.f6,{theme:defaultTheme},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mdx_js_react__WEBPACK_IMPORTED_MODULE_7__.Z,{components:defaultComponents},react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Suspense,{fallback:"loading..."},react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,null))))))))}}},"./blocks/use-input-siblings/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Gl:()=>useInput,tz:()=>useInputSiblings,C6:()=>useIsFirstMount,Ux:()=>useSeparatorInput,Cm:()=>useTwoNumbersInput});var react=__webpack_require__("./node_modules/react/index.js");const useIsFirstMount=()=>{const firstMount=react.useRef(!0);return react.useEffect((()=>{firstMount.current=!1}),[]),firstMount.current},useInput=options=>{const{autoFocus=!1,value}=options,ref=react.useRef(null),[internalValue,setInternalValue]=react.useState((value||options.defaultValue||"").slice(0,options.maxLength));(0,react.useEffect)((()=>{autoFocus&&ref.current&&(ref.current.focus(),0!==ref.current.value.length&&ref.current.setSelectionRange(0,ref.current.value.length))}),[autoFocus]);const isFirstMount=useIsFirstMount();return(0,react.useEffect)((()=>{isFirstMount||setInternalValue(value||"")}),[value]),{options,value:internalValue,invalid:"function"==typeof options.validator&&!options.validator(internalValue),setValue:setInternalValue,getDOM:()=>ref.current,getInputProps:handlers=>({ref,value:internalValue,onChange:event=>{let inputValue=event.target.value;handlers?.onChange?.(event),inputValue=inputValue.substr(0,options.maxLength),setInternalValue(inputValue),options.onChange?.(inputValue,{invalid:"function"==typeof options.validator&&!options.validator(inputValue)})}})}},prependZero=value=>value?1===value.length?`0${value}`:value:"",useTwoNumbersInput=options=>{let defaultValue=options?.defaultValue;void 0!==defaultValue&&(defaultValue=prependZero(defaultValue));let value=options?.value;void 0!==value&&(value=prependZero(value));const result=useInput({validator:value=>new RegExp(/^\d{0,2}$/).test(value),...options,defaultValue,value,maxLength:2});return{...result,getInputProps:handlers=>({...result.getInputProps(handlers),onBlur:event=>{console.log("blur"),handlers?.onBlur?.(event),result.setValue((currentValue=>1===currentValue.length?`0${currentValue}`:currentValue))}})}};const useInputSiblings=options=>{const{siblings}=options,blurEvent=react.useRef(void 0),[unFocused,setUnFocused]=react.useState(!1);return react.useEffect((()=>{unFocused&&siblings.every((input=>{const DOM=input.getDOM();return DOM&&DOM.ownerDocument.activeElement!==DOM}))&&blurEvent.current&&options?.onBlur?.(blurEvent.current)}),[unFocused]),siblings.map(((input,index)=>function(handlers){const inputProps=input.getInputProps();return{...inputProps,onFocus:event=>{handlers?.onFocus?.(event),inputProps.onFocus?.(event),setUnFocused(!1)},onChange:event=>{handlers?.onChange?.(event),inputProps.onChange?.(event);const{value}=event.target,jumpLength=function getJumpLength(maxLength){return"number"==typeof maxLength?maxLength:maxLength.reduce(((total,num)=>total+num))+maxLength.length-1}(input.options.maxLength);if(value.length===jumpLength){const nextDOM=siblings[index+1]?.getDOM();nextDOM&&(nextDOM.focus(),nextDOM.setSelectionRange(0,nextDOM.value.length))}},onBlur:event=>{handlers?.onBlur?.(event),inputProps.onBlur?.(event),blurEvent.current=event,setUnFocused(!0)},onKeyDown:event=>{if(handlers?.onKeyDown?.(event),inputProps.onKeyDown?.(event),index>0){const DOM=siblings[index].getDOM();"Backspace"===event.code&&DOM&&!DOM.value.length&&siblings[index-1].getDOM()?.focus()}}}}))},someEqual=(value,matches)=>matches.some((match=>value===match)),useSeparatorInput=options=>{const{autoFocus=!1,defaultValue,value,maxLength,separator="/",validator}=options,maxCharaters=maxLength.reduce(((total,num)=>total+num))+maxLength.length-1,separatorIndexes=(maxLength=>{const chars=[];let count=0;return maxLength.forEach(((num,index,array)=>{count+=num,index!==array.length-1&&chars.push(count),count+=1})),chars})(maxLength),ref=react.useRef(null),codeRef=react.useRef(),[internalValue,setInternalValue]=react.useState(((value,separatorIndexes)=>someEqual(value.length,separatorIndexes)?`${value}/`:value)((value||defaultValue||"").slice(0,maxCharaters),separatorIndexes));react.useEffect((()=>{autoFocus&&ref.current&&ref.current.focus()}),[autoFocus]);const isFirstMount=useIsFirstMount();return react.useEffect((()=>{isFirstMount||setInternalValue(value||"")}),[value]),{options,value:internalValue,setValue:setInternalValue,invalid:"function"==typeof validator&&!validator(internalValue),getDOM:()=>ref.current,getInputProps:handlers=>({ref,value:internalValue,onChange:event=>{handlers?.onChange?.(event);const inputValue=event.target.value;let newValue=inputValue;"Backspace"===codeRef.current&&someEqual(inputValue.length,separatorIndexes)?newValue=inputValue.slice(0,-1):someEqual(inputValue.length,separatorIndexes)&&(newValue=`${inputValue}${separator}`),newValue=newValue.substr(0,maxCharaters),setInternalValue(newValue),options?.onChange?.(newValue,{invalid:"function"==typeof validator&&!validator(newValue)})},onKeyDown:event=>{handlers?.onKeyDown?.(event),codeRef.current=event.code}})}}},"./blocks/use-pin-input/usePinInput.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{b:()=>usePinInput});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_use_input_siblings__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./blocks/use-input-siblings/index.ts");const numberValidator=value=>new RegExp(/\d/).test(value),alphanumericValidator=value=>new RegExp(/[a-zA-Z0-9]/).test(value),usePinInput=(options={})=>{const{pinLength=4,defaultValue,value,type="number",mask=!1}=options,validator="number"===type?numberValidator:alphanumericValidator,splittedValue=(value||defaultValue||"").split(""),siblings=[...Array(pinLength).fill(void 0)].map(((_,index)=>(0,_use_input_siblings__WEBPACK_IMPORTED_MODULE_1__.Gl)({autoFocus:options.autoFocus&&0===index,maxLength:1,validator,value:splittedValue[index]}))),isFirstMount=(0,_use_input_siblings__WEBPACK_IMPORTED_MODULE_1__.C6)(),pinArray=siblings.map((({value})=>value));react__WEBPACK_IMPORTED_MODULE_0__.useEffect((()=>{isFirstMount||options.onChange?.(pinArray.join(""),{invalid:siblings.some((pinInput=>pinInput.invalid))})}),pinArray);return{pins:(0,_use_input_siblings__WEBPACK_IMPORTED_MODULE_1__.tz)({siblings,onBlur:options?.onBlur}).map((getInputProps=>handlers=>{const inputProps=getInputProps(handlers);return{"aria-label":"Please enter your pin code",size:1,type:mask?"password":"tel",pattern:"d",placeholder:"â—‹",inputMode:"numeric",autoComplete:options.otp?"one-time-code":"off",...inputProps,onChange:event=>{let inputValue=event.target.value;if(inputValue.length>2){inputValue=inputValue[0]===inputProps.value?inputValue.slice(1):inputValue.substring(-1),handlers?.onChange?.(event);const valueArray=inputValue.split("").filter(validator).slice(0,siblings.length);valueArray.forEach(((val,index)=>{siblings[index].setValue(val)}));const nextInput=siblings[Math.min(valueArray.length,siblings.length-1)].getDOM();nextInput&&nextInput.focus()}else inputProps.onChange(event)}}}))}}}}]);