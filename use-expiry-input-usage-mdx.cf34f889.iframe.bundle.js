"use strict";(self.webpackChunkmui_treasury=self.webpackChunkmui_treasury||[]).push([[1029],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>MDXProvider,a:()=>useMDXComponents});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}}),[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"./blocks/use-expiry-input/usage.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const useExpiryInputraw_namespaceObject='import React from "react";\nimport { useIsFirstMount, useSeparatorInput } from "../use-input-siblings";\nconst prependZero = value => {\n  if (!value) return "";\n  return value.toString().length === 1 ? `0${value}` : value;\n};\nconst formatValue = value => value.expMonth ? `${prependZero(value.expMonth)}/${value.expYear || ""}` : "";\nexport const expiryValidator = value => new RegExp(/^(0[1-9]|1[0-2])\\/(2[0-9]{3}|[0-9]{2})$/).test(value);\nexport const useExpiryInput = options => {\n  const {\n    fullYear = false,\n    defaultValue,\n    value\n  } = options || {};\n  const formattedValue = formatValue(value || defaultValue || {});\n  const expiry = useSeparatorInput({\n    maxLength: [2, fullYear ? 4 : 2],\n    separator: "/",\n    value: formattedValue,\n    validator: expiryValidator\n  });\n  const isFirstMount = useIsFirstMount();\n  React.useEffect(() => {\n    if (!isFirstMount) {\n      const [expMonth, expYear] = expiry.value.split("/");\n      options?.onChange?.({\n        expMonth: Number(expMonth) || undefined,\n        expYear: Number(expYear) || undefined\n      }, {\n        invalid: !expiryValidator(expiry.value)\n      });\n    }\n  }, [expiry.value]);\n  return {\n    ...expiry,\n    getInputProps: handlers => {\n      const inputProps = expiry.getInputProps(handlers);\n      return {\n        ...inputProps,\n        size: fullYear ? 7 : 5,\n        type: "tel",\n        inputMode: "numeric",\n        onChange: event => {\n          const inputValue = event.target.value;\n          if (inputValue.length === 2 && Number.isInteger(Number(inputValue[0])) && inputValue[1] === "/") {\n            handlers?.onChange?.(event);\n            expiry.setValue(`0${inputValue}`);\n          } else {\n            inputProps.onChange(event);\n          }\n        }\n      };\n    }\n  };\n};';function _createMdxContent(props){const _components={code:"code",h2:"h2",pre:"pre",...(0,lib.a)(),...props.components};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Hook/useExpiryInput"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"cli",children:"CLI"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-sh",children:"npx mui-treasury@latest clone use-expiry-input use-input-siblings\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"useexpiryinput",children:"UseExpiryInput"}),"\n",(0,jsx_runtime.jsx)(dist.Hw,{code:useExpiryInputraw_namespaceObject,language:"tsx"})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.a)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}}}]);