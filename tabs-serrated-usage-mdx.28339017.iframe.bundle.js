"use strict";(self.webpackChunkmui_treasury=self.webpackChunkmui_treasury||[]).push([[1273],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{NF:()=>withMDXComponents,Zo:()=>MDXProvider,ah:()=>useMDXComponents,pC:()=>MDXContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./blocks/tabs-serrated/usage.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>usage});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const TabsSerratedraw_namespaceObject='import React from "react";\nimport AppBar from "@mui/material/AppBar";\nimport { styled } from "@mui/material/styles";\nimport Tab, { tabClasses } from "@mui/material/Tab";\nimport Tabs, { tabsClasses } from "@mui/material/Tabs";\nimport Toolbar from "@mui/material/Toolbar";\n\nconst TabItem = styled(Tab)(({ theme }) => ({\n  opacity: 1,\n  overflow: "initial",\n  paddingTop: theme.spacing(2.5),\n  minHeight: theme.spacing(7),\n  color: "#fff",\n  background: "rbga(0,0,0,0)",\n  transition: "0.2s",\n  zIndex: "var(--_zIndex)",\n  marginTop: theme.spacing(1),\n  textTransform: "initial",\n  [theme.breakpoints.up("md")]: {\n    minWidth: 120,\n  },\n  "&::before, &::after": {\n    content: \'" "\',\n    position: "absolute",\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n  },\n  "&:before": {\n    backgroundColor: (theme.vars || theme).palette.grey[500],\n    transform: "skewY(-6deg)",\n    transformOrigin: "100%",\n    zIndex: -1,\n  },\n  "&::after": {\n    left: "unset",\n    pointerEvents: "none",\n    transition: "0.2s",\n    transform: "translateX(100%)",\n    display: "block",\n    width: 8,\n    zIndex: 2,\n    background:\n      // eslint-disable-next-line max-len\n      "linear-gradient(to top right, rgba(0,0,0,0.2), rgba(0,0,0,0.2) 45%, transparent, transparent 64%)",\n  },\n  [`&.${tabClasses.selected}`]: {\n    color: (theme.vars || theme).palette.text.primary,\n    zIndex: 100,\n    "&:before": {\n      backgroundColor: "#fff",\n      boxShadow: "3px 3px 8px 0 rgba(0,0,0,0.38)",\n    },\n    "&:after": {\n      width: theme.spacing(3.5),\n    },\n  },\n}));\n\nexport function TabsSerrated() {\n  const [tabIndex, setTabIndex] = React.useState(0);\n  return (\n    <AppBar\n      position={"static"}\n      elevation={0}\n      sx={{ backgroundColor: "#E6E8EB" }}\n    >\n      <Toolbar\n        sx={{\n          overflow: "hidden",\n          minHeight: 72,\n        }}\n      >\n        <Tabs\n          textColor="inherit"\n          value={tabIndex}\n          onChange={(e, index) => setTabIndex(index)}\n          sx={{\n            alignSelf: "flex-end",\n            overflow: "visible",\n            [`& .${tabsClasses.scroller}`]: {\n              overflow: "visible !important",\n            },\n            [`& .${tabsClasses.indicator}`]: {\n              display: "none",\n            },\n          }}\n        >\n          {["Data", "Rule", "Indexes", "Usage"].map((label, index) => (\n            <TabItem\n              key={index}\n              disableRipple\n              label={label}\n              sx={{ zIndex: 100 - index }}\n            />\n          ))}\n        </Tabs>\n      </Toolbar>\n    </AppBar>\n  );\n}\n';function _createMdxContent(props){const _components=Object.assign({h2:"h2",pre:"pre",code:"code"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Tabs/Serrated"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"cli",children:"CLI"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-sh",children:"npx mui-treasury@latest clone tabs-serrated\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"tabsserrated",children:"TabsSerrated"}),"\n",(0,jsx_runtime.jsx)(dist.Hw,{code:TabsSerratedraw_namespaceObject,language:"tsx"})]})}const usage=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)}}}]);