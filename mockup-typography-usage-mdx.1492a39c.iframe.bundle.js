"use strict";(self.webpackChunkmui_treasury=self.webpackChunkmui_treasury||[]).push([[2124],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{NF:()=>withMDXComponents,Zo:()=>MDXProvider,ah:()=>useMDXComponents,pC:()=>MDXContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./blocks/mockup-typography/usage.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>usage});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const MockupTypographyraw_namespaceObject='import React from "react";\nimport Box, { BoxProps } from "@mui/material/Box";\nimport { SxProps, Theme } from "@mui/material/styles";\nimport { getBaseGrey, randomBetween } from "../mockup-utils";\n\nconst createTypography =\n  (generateSx: () => BoxProps["sx"]) =>\n  ({ cached, sx = [], ...props }: { cached?: boolean } & BoxProps) => {\n    const ref = React.useRef(generateSx());\n    const resolvedSx: SxProps<Theme> =\n      (cached ? ref.current : generateSx()) || [];\n    return (\n      <Box\n        {...props}\n        sx={[\n          {\n            height: 16,\n            borderRadius: 1,\n            bgcolor: getBaseGrey,\n          },\n          ...(Array.isArray(resolvedSx) ? resolvedSx : [resolvedSx]),\n          ...(Array.isArray(sx) ? sx : [sx]),\n        ]}\n      />\n    );\n  };\n\nexport const H1 = createTypography(() => ({\n  height: 40,\n  width: randomBetween(12, 20, "ch"),\n  maxWidth: "100%",\n  mt: 3,\n  mb: 1,\n}));\n\nexport const Text = createTypography(() => ({\n  height: 16,\n  mt: 1.5,\n  mb: 1.5,\n  width: "100%",\n  maxWidth: "100%",\n}));\n\nexport const Word = createTypography(() => ({\n  height: 16,\n  width: randomBetween(8, 14, "ch"),\n  maxWidth: "100%",\n}));\n';function _createMdxContent(props){const _components=Object.assign({h2:"h2",pre:"pre",code:"code"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Mockup/Typography"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"cli",children:"CLI"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-sh",children:"npx mui-treasury@latest clone mockup-typography\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"mockuptypography",children:"MockupTypography"}),"\n",(0,jsx_runtime.jsx)(dist.Hw,{code:MockupTypographyraw_namespaceObject,language:"tsx"})]})}const usage=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)}}}]);