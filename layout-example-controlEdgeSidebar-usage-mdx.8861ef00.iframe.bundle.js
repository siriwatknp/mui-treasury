"use strict";(self.webpackChunkmui_treasury=self.webpackChunkmui_treasury||[]).push([[4946],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{NF:()=>withMDXComponents,Zo:()=>MDXProvider,ah:()=>useMDXComponents,pC:()=>MDXContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./blocks/layout-example-controlEdgeSidebar/usage.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>usage});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const LayoutExampleControlEdgeSidebarraw_namespaceObject='import React from "react";\nimport ArrowLeft from "@mui/icons-material/ArrowLeft";\nimport Menu from "@mui/icons-material/Menu";\nimport Box from "@mui/material/Box";\nimport CssBaseline from "@mui/material/CssBaseline";\nimport IconButton from "@mui/material/IconButton";\nimport List from "@mui/material/List";\nimport ListItem from "@mui/material/ListItem";\nimport ListItemButton from "@mui/material/ListItemButton";\nimport ListItemText from "@mui/material/ListItemText";\nimport ListSubheader from "@mui/material/ListSubheader";\nimport {\n  Content,\n  EdgeSidebar,\n  EdgeTrigger,\n  Header,\n  Root,\n  SidebarContent,\n  useLayoutCtx,\n} from "../layout-core";\n\nconst TriggerUsingHook = () => {\n  const {\n    state: { leftEdgeSidebar },\n    toggleLeftSidebarOpen,\n  } = useLayoutCtx();\n  return (\n    <ListItemButton onClick={toggleLeftSidebarOpen}>\n      {leftEdgeSidebar?.open ? "Close" : "Open"}\n    </ListItemButton>\n  );\n};\n\nexport const LayoutExampleControlEdgeSidebar = () => {\n  return (\n    <Root\n      scheme={{\n        header: {\n          config: {\n            xs: {\n              position: "sticky",\n              height: 56,\n            },\n          },\n        },\n        leftEdgeSidebar: {\n          config: {\n            sm: {\n              variant: "persistent",\n              persistentBehavior: "fit",\n              width: 256,\n              collapsible: true,\n              collapsedWidth: 120,\n              headerMagnetEnabled: true,\n            },\n          },\n        },\n      }}\n      initialState={{\n        leftEdgeSidebar: {\n          open: true,\n          collapsed: true,\n        },\n      }}\n    >\n      <CssBaseline />\n      <Header>\n        <Box display="flex" alignItems="center" gap={1} px={1}>\n          <EdgeTrigger target={{ anchor: "left", field: "open" }}>\n            {(open, setOpen) => (\n              <IconButton onClick={() => setOpen(!open)}>\n                {open ? <ArrowLeft /> : <Menu />}\n              </IconButton>\n            )}\n          </EdgeTrigger>\n          <div>Header</div>\n        </Box>\n      </Header>\n      <EdgeSidebar anchor="left">\n        {({ state: { leftEdgeSidebar }, toggleLeftSidebarCollapsed }) => (\n          <SidebarContent>\n            <List>\n              <ListSubheader>Trigger</ListSubheader>\n              <ListItem button onClick={toggleLeftSidebarCollapsed}>\n                <ListItemText>\n                  {leftEdgeSidebar?.collapsed ? "Expand" : "Collapse"}\n                </ListItemText>\n              </ListItem>\n            </List>\n          </SidebarContent>\n        )}\n      </EdgeSidebar>\n      <Content>\n        <Box p={2}>\n          <List>\n            <ListSubheader>Using Layout Hook</ListSubheader>\n            <TriggerUsingHook />\n          </List>\n        </Box>\n      </Content>\n    </Root>\n  );\n};\n';function _createMdxContent(props){const _components=Object.assign({h2:"h2",pre:"pre",code:"code"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Layout/Example/ControlEdgeSidebar"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"cli",children:"CLI"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-sh",children:"npx mui-treasury@latest clone layout-example-controlEdgeSidebar\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"layoutexamplecontroledgesidebar",children:"LayoutExampleControlEdgeSidebar"}),"\n",(0,jsx_runtime.jsx)(dist.Hw,{code:LayoutExampleControlEdgeSidebarraw_namespaceObject,language:"tsx"})]})}const usage=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)}}}]);