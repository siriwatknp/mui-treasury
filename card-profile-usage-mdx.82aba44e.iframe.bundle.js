"use strict";(self.webpackChunkmui_treasury=self.webpackChunkmui_treasury||[]).push([[6495],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{NF:()=>withMDXComponents,Zo:()=>MDXProvider,ah:()=>useMDXComponents,pC:()=>MDXContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./blocks/card-profile/usage.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>usage});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const CardProfileraw_namespaceObject='import React from "react";\nimport Avatar from "@mui/material/Avatar";\nimport Box from "@mui/material/Box";\nimport Card from "@mui/material/Card";\nimport CardContent from "@mui/material/CardContent";\nimport Divider from "@mui/material/Divider";\n\nexport function CardProfile() {\n  return (\n    <Card\n      sx={{\n        borderRadius: "12px",\n        minWidth: 256,\n        textAlign: "center",\n        boxShadow:\n          "0 2px 4px -2px rgba(0,0,0,0.24), 0 4px 24px -2px rgba(0, 0, 0, 0.2)",\n      }}\n    >\n      <CardContent>\n        <Avatar\n          src={"https://i.pravatar.cc/300"}\n          sx={{\n            width: 60,\n            height: 60,\n            margin: "auto",\n          }}\n        />\n        <Box\n          component="h3"\n          sx={{\n            fontSize: 18,\n            fontWeight: "bold",\n            letterSpacing: "0.5px",\n            marginTop: 1,\n            marginBottom: 0,\n          }}\n        >\n          Alan Podemski\n        </Box>\n        <Box\n          component="span"\n          sx={{\n            fontSize: 14,\n            color: "grey.500",\n            marginBottom: "0.875em",\n          }}\n        >\n          Poland\n        </Box>\n      </CardContent>\n      <Divider light />\n      <Box display={"flex"}>\n        <Box\n          p={2}\n          flex={"auto"}\n          sx={{\n            position: "relative",\n            "&:not(:last-of-type)": {\n              "&:after": {\n                content: \'" "\',\n                display: "block",\n                position: "absolute",\n                height: "50%",\n                width: "1px",\n                backgroundColor: "rgba(0 0 0 / 0.08)",\n                top: "50%",\n                right: 0,\n                transform: "translateY(-50%)",\n              },\n            },\n          }}\n        >\n          <Box\n            sx={{\n              fontSize: 12,\n              color: "grey.500",\n              fontWeight: 500,\n              fontFamily:\n                \'-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"\',\n              margin: 0,\n            }}\n          >\n            Followers\n          </Box>\n          <Box\n            component="p"\n            sx={{\n              fontSize: 20,\n              fontWeight: "bold",\n              marginBottom: 0.5,\n              letterSpacing: "1px",\n            }}\n          >\n            6941\n          </Box>\n        </Box>\n        <Box\n          p={2}\n          flex={"auto"}\n          sx={{\n            position: "relative",\n            "&:not(:last-of-type)": {\n              "&:after": {\n                content: \'" "\',\n                display: "block",\n                position: "absolute",\n                height: "50%",\n                width: "1px",\n                backgroundColor: "rgba(0 0 0 / 0.08)",\n                top: "50%",\n                right: 0,\n                transform: "translateY(-50%)",\n              },\n            },\n          }}\n        >\n          <Box\n            sx={{\n              fontSize: 12,\n              color: "grey.500",\n              fontWeight: 500,\n              fontFamily:\n                \'-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"\',\n              margin: 0,\n            }}\n          >\n            Following\n          </Box>\n          <Box\n            component="p"\n            sx={{\n              fontSize: 20,\n              fontWeight: "bold",\n              marginBottom: 0.5,\n              letterSpacing: "1px",\n            }}\n          >\n            12\n          </Box>\n        </Box>\n      </Box>\n    </Card>\n  );\n}\n';function _createMdxContent(props){const _components=Object.assign({h2:"h2",pre:"pre",code:"code"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Card/Profile"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"cli",children:"CLI"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-sh",children:"npx mui-treasury@latest clone card-profile\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"cardprofile",children:"CardProfile"}),"\n",(0,jsx_runtime.jsx)(dist.Hw,{code:CardProfileraw_namespaceObject,language:"tsx"})]})}const usage=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)}}}]);