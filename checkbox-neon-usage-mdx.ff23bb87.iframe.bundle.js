"use strict";(self.webpackChunkmui_treasury=self.webpackChunkmui_treasury||[]).push([[2211],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{NF:()=>withMDXComponents,Zo:()=>MDXProvider,ah:()=>useMDXComponents,pC:()=>MDXContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./blocks/checkbox-neon/usage.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>usage});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const CheckboxNeonraw_namespaceObject='import React from "react";\nimport Checkbox, { checkboxClasses } from "@mui/material/Checkbox";\nimport FormControlLabel from "@mui/material/FormControlLabel";\nimport { styled } from "@mui/material/styles";\n\nconst mainColor = "#137cbd";\nconst encodedMainColor = encodeURIComponent(mainColor);\nconst lightColor = "rgba(19, 124, 189, 0.2)";\n\nconst errorColor = "#d52731";\nconst lightErrorColor = "rgba(213, 39, 49, 0.2)";\n\nconst NeonCheckbox = styled(Checkbox)({\n  "& + *": {\n    marginTop: "2px",\n    fontSize: "0.875rem",\n  },\n  "&:hover, &.Mui-focusVisible": {\n    backgroundColor: "transparent !important",\n  },\n  "& input + *": {\n    borderRadius: 3,\n    width: 16,\n    height: 16,\n  },\n  "& input:disabled + *": {\n    boxShadow: "inset 0 0 0 1px rgba(16,22,26,.3) !important",\n    background: "rgba(206,217,224,.5) !important",\n  },\n  [`&:not(.${checkboxClasses.checked})`]: {\n    "& input + *": {\n      boxShadow:\n        "0 1px 3px 0 rgba(0,0,0,0.12), inset 0 0 0 1px rgba(16,22,26,.5)",\n      backgroundColor: "#fff",\n    },\n    "& input:hover ~ *, & input:focus + *": {\n      boxShadow: `inset 0 0 0 1px ${mainColor}, inset 0 -1px 0 ${mainColor}`,\n      backgroundColor: lightColor,\n    },\n    "& input + .Mui-error": {\n      boxShadow: `0 1px 3px 0 ${lightErrorColor}, inset 0 0 0 1px ${errorColor}`,\n    },\n    "& input:hover + .Mui-error, input:focus + .Mui-error": {\n      background: lightErrorColor,\n    },\n  },\n  [`&.${checkboxClasses.checked}`]: {\n    "& input + *": {\n      boxShadow: `inset 0 0 0 1px ${mainColor}, inset 0 -1px 0 ${mainColor}`,\n      backgroundColor: "#fff",\n      backgroundImage:\n        "linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))",\n      "&:before": {\n        display: "block",\n        width: 16,\n        height: 16,\n        backgroundImage:\n          `url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 16 16\'%3E%3Cpath` +\n          " fill-rule=\'evenodd\' clip-rule=\'evenodd\' d=\'M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 " +\n          `1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z\' fill=\'${encodedMainColor}\'/%3E%3C/svg%3E")`,\n        content: \'""\',\n      },\n    },\n    "& input:focus + *": {\n      backgroundColor: lightColor,\n    },\n  },\n});\n\nexport function CheckboxNeon() {\n  return (\n    <div>\n      <FormControlLabel\n        control={\n          <NeonCheckbox disableRipple checkedIcon={<span />} icon={<span />} />\n        }\n        label={"Awesome"}\n      />\n      <br />\n      <FormControlLabel\n        control={\n          <NeonCheckbox\n            disableRipple\n            checkedIcon={<span />}\n            icon={<span className="Mui-error" />}\n          />\n        }\n        label={"Error"}\n      />\n      <br />\n      <FormControlLabel\n        disabled\n        control={\n          <NeonCheckbox disableRipple checkedIcon={<span />} icon={<span />} />\n        }\n        label={"Disabled"}\n      />\n    </div>\n  );\n}\n';function _createMdxContent(props){const _components=Object.assign({h2:"h2",pre:"pre",code:"code"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Checkbox/Neon"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"cli",children:"CLI"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-sh",children:"npx mui-treasury@latest clone checkbox-neon\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"checkboxneon",children:"CheckboxNeon"}),"\n",(0,jsx_runtime.jsx)(dist.Hw,{code:CheckboxNeonraw_namespaceObject,language:"tsx"})]})}const usage=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)}}}]);